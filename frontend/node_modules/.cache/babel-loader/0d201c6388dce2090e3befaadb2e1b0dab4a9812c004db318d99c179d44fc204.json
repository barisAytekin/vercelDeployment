{"ast":null,"code":"var _jsxFileName = \"/Users/barisaytekin/case/frontend/src/Table.js\",\n  _s = $RefreshSig$();\nimport * as React from \"react\";\nimport Paper from \"@mui/material/Paper\";\nimport Table from \"@mui/material/Table\";\nimport TableBody from \"@mui/material/TableBody\";\nimport TableCell from \"@mui/material/TableCell\";\nimport TableContainer from \"@mui/material/TableContainer\";\nimport TableHead from \"@mui/material/TableHead\";\nimport TablePagination from \"@mui/material/TablePagination\";\nimport TableRow from \"@mui/material/TableRow\";\nimport axios, * as others from \"axios\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst columns = [{\n  id: \"name\",\n  label: \"Name\",\n  minWidth: 170\n}, {\n  id: \"amount\",\n  label: \"Number of sales\",\n  minWidth: 170\n}];\nfunction createData(name, code, population, size) {\n  const density = population / size;\n  return {\n    name,\n    code,\n    population,\n    size,\n    density\n  };\n}\nconst rows = [createData(\"India\", \"IN\", 1324171354, 3287263), createData(\"China\", \"CN\", 1403500365, 9596961), createData(\"Italy\", \"IT\", 60483973, 301340), createData(\"United States\", \"US\", 327167434, 9833520), createData(\"Canada\", \"CA\", 37602103, 9984670), createData(\"Australia\", \"AU\", 25475400, 7692024), createData(\"Germany\", \"DE\", 83019200, 357578), createData(\"Ireland\", \"IE\", 4857000, 70273), createData(\"Mexico\", \"MX\", 126577691, 1972550), createData(\"Japan\", \"JP\", 126317000, 377973), createData(\"France\", \"FR\", 67022000, 640679), createData(\"United Kingdom\", \"GB\", 67545757, 242495), createData(\"Russia\", \"RU\", 146793744, 17098246), createData(\"Nigeria\", \"NG\", 200962417, 923768), createData(\"Brazil\", \"BR\", 210147125, 8515767)];\nexport default function DynamicTable(props) {\n  _s();\n  const [page, setPage] = React.useState(0);\n  const [rowsPerPage, setRowsPerPage] = React.useState(10);\n  const [row, setRows] = React.useState([{}]);\n  const handleChangePage = (event, newPage) => {\n    setPage(newPage);\n  };\n  const handleChangeRowsPerPage = event => {\n    setRowsPerPage(+event.target.value);\n    setPage(0);\n  };\n  React.useEffect(() => {\n    const fetchProductsAmount = async () => {\n      const response = axios.get(`/api/productsamount/Sobe`).then(response => {\n        console.log(response);\n        if (response.status === 200) {\n          console.log(response.data);\n        } else {\n          console.log(`Status code ${response.status}`);\n        }\n      }, error => {\n        console.log(error);\n      });\n      setRows(response.data);\n    };\n    fetchProductsAmount();\n  });\n  return /*#__PURE__*/_jsxDEV(Paper, {\n    sx: {\n      width: \"100%\",\n      overflow: \"hidden\"\n    },\n    children: [/*#__PURE__*/_jsxDEV(TableContainer, {\n      sx: {\n        maxHeight: 440\n      },\n      children: /*#__PURE__*/_jsxDEV(Table, {\n        stickyHeader: true,\n        \"aria-label\": \"sticky table\",\n        children: [/*#__PURE__*/_jsxDEV(TableHead, {\n          children: /*#__PURE__*/_jsxDEV(TableRow, {\n            children: columns.map(column => /*#__PURE__*/_jsxDEV(TableCell, {\n              align: column.align,\n              style: {\n                minWidth: column.minWidth\n              },\n              children: column.label\n            }, column.id, false, {\n              fileName: _jsxFileName,\n              lineNumber: 83,\n              columnNumber: 17\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 81,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 80,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(TableBody, {\n          children: rows.slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage).map(row => {\n            return /*#__PURE__*/_jsxDEV(TableRow, {\n              hover: true,\n              role: \"checkbox\",\n              tabIndex: -1,\n              children: columns.map(column => {\n                const value = row[column.id];\n                return /*#__PURE__*/_jsxDEV(TableCell, {\n                  align: column.align,\n                  children: column.format && typeof value === \"number\" ? column.format(value) : value\n                }, column.id, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 102,\n                  columnNumber: 25\n                }, this);\n              })\n            }, row.code, false, {\n              fileName: _jsxFileName,\n              lineNumber: 98,\n              columnNumber: 19\n            }, this);\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 93,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(TablePagination, {\n      rowsPerPageOptions: [10, 25, 100],\n      component: \"div\",\n      count: rows.length,\n      rowsPerPage: rowsPerPage,\n      page: page,\n      onPageChange: handleChangePage,\n      onRowsPerPageChange: handleChangeRowsPerPage\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 115,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 77,\n    columnNumber: 5\n  }, this);\n}\n_s(DynamicTable, \"Fbr2u/jK+QczbZxA2Y0Vn2xAYaQ=\");\n_c = DynamicTable;\nvar _c;\n$RefreshReg$(_c, \"DynamicTable\");","map":{"version":3,"names":["React","Paper","Table","TableBody","TableCell","TableContainer","TableHead","TablePagination","TableRow","axios","others","jsxDEV","_jsxDEV","columns","id","label","minWidth","createData","name","code","population","size","density","rows","DynamicTable","props","_s","page","setPage","useState","rowsPerPage","setRowsPerPage","row","setRows","handleChangePage","event","newPage","handleChangeRowsPerPage","target","value","useEffect","fetchProductsAmount","response","get","then","console","log","status","data","error","sx","width","overflow","children","maxHeight","stickyHeader","map","column","align","style","fileName","_jsxFileName","lineNumber","columnNumber","slice","hover","role","tabIndex","format","rowsPerPageOptions","component","count","length","onPageChange","onRowsPerPageChange","_c","$RefreshReg$"],"sources":["/Users/barisaytekin/case/frontend/src/Table.js"],"sourcesContent":["import * as React from \"react\";\nimport Paper from \"@mui/material/Paper\";\nimport Table from \"@mui/material/Table\";\nimport TableBody from \"@mui/material/TableBody\";\nimport TableCell from \"@mui/material/TableCell\";\nimport TableContainer from \"@mui/material/TableContainer\";\nimport TableHead from \"@mui/material/TableHead\";\nimport TablePagination from \"@mui/material/TablePagination\";\nimport TableRow from \"@mui/material/TableRow\";\nimport axios, * as others from \"axios\";\n\nconst columns = [\n  { id: \"name\", label: \"Name\", minWidth: 170 },\n  {\n    id: \"amount\",\n    label: \"Number of sales\",\n    minWidth: 170,\n  },\n];\n\nfunction createData(name, code, population, size) {\n  const density = population / size;\n  return { name, code, population, size, density };\n}\n\nconst rows = [\n  createData(\"India\", \"IN\", 1324171354, 3287263),\n  createData(\"China\", \"CN\", 1403500365, 9596961),\n  createData(\"Italy\", \"IT\", 60483973, 301340),\n  createData(\"United States\", \"US\", 327167434, 9833520),\n  createData(\"Canada\", \"CA\", 37602103, 9984670),\n  createData(\"Australia\", \"AU\", 25475400, 7692024),\n  createData(\"Germany\", \"DE\", 83019200, 357578),\n  createData(\"Ireland\", \"IE\", 4857000, 70273),\n  createData(\"Mexico\", \"MX\", 126577691, 1972550),\n  createData(\"Japan\", \"JP\", 126317000, 377973),\n  createData(\"France\", \"FR\", 67022000, 640679),\n  createData(\"United Kingdom\", \"GB\", 67545757, 242495),\n  createData(\"Russia\", \"RU\", 146793744, 17098246),\n  createData(\"Nigeria\", \"NG\", 200962417, 923768),\n  createData(\"Brazil\", \"BR\", 210147125, 8515767),\n];\n\nexport default function DynamicTable(props) {\n  const [page, setPage] = React.useState(0);\n  const [rowsPerPage, setRowsPerPage] = React.useState(10);\n  const [row, setRows] = React.useState([{}]);\n\n  const handleChangePage = (event, newPage) => {\n    setPage(newPage);\n  };\n\n  const handleChangeRowsPerPage = (event) => {\n    setRowsPerPage(+event.target.value);\n    setPage(0);\n  };\n  React.useEffect(() => {\n    const fetchProductsAmount = async () => {\n      const response = axios.get(`/api/productsamount/Sobe`).then(\n        (response) => {\n          console.log(response);\n          if (response.status === 200) {\n            console.log(response.data);\n          } else {\n            console.log(`Status code ${response.status}`);\n          }\n        },\n        (error) => {\n          console.log(error);\n        }\n      );\n      setRows(response.data);\n    };\n    fetchProductsAmount();\n  });\n  return (\n    <Paper sx={{ width: \"100%\", overflow: \"hidden\" }}>\n      <TableContainer sx={{ maxHeight: 440 }}>\n        <Table stickyHeader aria-label=\"sticky table\">\n          <TableHead>\n            <TableRow>\n              {columns.map((column) => (\n                <TableCell\n                  key={column.id}\n                  align={column.align}\n                  style={{ minWidth: column.minWidth }}\n                >\n                  {column.label}\n                </TableCell>\n              ))}\n            </TableRow>\n          </TableHead>\n          <TableBody>\n            {rows\n              .slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage)\n              .map((row) => {\n                return (\n                  <TableRow hover role=\"checkbox\" tabIndex={-1} key={row.code}>\n                    {columns.map((column) => {\n                      const value = row[column.id];\n                      return (\n                        <TableCell key={column.id} align={column.align}>\n                          {column.format && typeof value === \"number\"\n                            ? column.format(value)\n                            : value}\n                        </TableCell>\n                      );\n                    })}\n                  </TableRow>\n                );\n              })}\n          </TableBody>\n        </Table>\n      </TableContainer>\n      <TablePagination\n        rowsPerPageOptions={[10, 25, 100]}\n        component=\"div\"\n        count={rows.length}\n        rowsPerPage={rowsPerPage}\n        page={page}\n        onPageChange={handleChangePage}\n        onRowsPerPageChange={handleChangeRowsPerPage}\n      />\n    </Paper>\n  );\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}