{"ast":null,"code":"var _jsxFileName = \"/Users/barisaytekin/case/frontend/src/Table.js\",\n  _s = $RefreshSig$();\nimport * as React from \"react\";\nimport Paper from \"@mui/material/Paper\";\nimport Table from \"@mui/material/Table\";\nimport TableBody from \"@mui/material/TableBody\";\nimport TableCell from \"@mui/material/TableCell\";\nimport TableContainer from \"@mui/material/TableContainer\";\nimport TableHead from \"@mui/material/TableHead\";\nimport TablePagination from \"@mui/material/TablePagination\";\nimport TableRow from \"@mui/material/TableRow\";\nimport axios, * as others from \"axios\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst columns = [{\n  id: \"name\",\n  label: \"Name\",\n  minWidth: 170\n}, {\n  id: \"amount\",\n  label: \"Number of sales\",\n  minWidth: 170\n}];\n\n// function createData(name, code, population, size) {\n//   const density = population / size;\n//   return { name, code, population, size, density };\n// }\n\n// const rows = [\n//   createData(\"India\", \"IN\", 1324171354, 3287263),\n//   createData(\"China\", \"CN\", 1403500365, 9596961),\n//   createData(\"Italy\", \"IT\", 60483973, 301340),\n//   createData(\"United States\", \"US\", 327167434, 9833520),\n//   createData(\"Canada\", \"CA\", 37602103, 9984670),\n//   createData(\"Australia\", \"AU\", 25475400, 7692024),\n//   createData(\"Germany\", \"DE\", 83019200, 357578),\n//   createData(\"Ireland\", \"IE\", 4857000, 70273),\n//   createData(\"Mexico\", \"MX\", 126577691, 1972550),\n//   createData(\"Japan\", \"JP\", 126317000, 377973),\n//   createData(\"France\", \"FR\", 67022000, 640679),\n//   createData(\"United Kingdom\", \"GB\", 67545757, 242495),\n//   createData(\"Russia\", \"RU\", 146793744, 17098246),\n//   createData(\"Nigeria\", \"NG\", 200962417, 923768),\n//   createData(\"Brazil\", \"BR\", 210147125, 8515767),\n// ];\n\nexport default function DynamicTable({\n  vendorName\n}) {\n  _s();\n  const [page, setPage] = React.useState(0);\n  const [rowsPerPage, setRowsPerPage] = React.useState(10);\n  const [rows, setRows] = React.useState([]);\n  const handleChangePage = (event, newPage) => {\n    setPage(newPage);\n  };\n  const handleChangeRowsPerPage = event => {\n    setRowsPerPage(+event.target.value);\n    setPage(0);\n  };\n  const fetchProductsAmount = async () => {\n    const response = axios.get(`/api/productsamount/Sobe`).then(response => {\n      console.log(response);\n      if (response.status === 200) {\n        console.log(response.data);\n      } else {\n        console.log(`Status code ${response.status}`);\n      }\n    }, error => {\n      console.log(error);\n    });\n    setRows(response.data);\n  };\n  return /*#__PURE__*/_jsxDEV(Paper, {\n    sx: {\n      width: \"90%\"\n    },\n    children: [/*#__PURE__*/_jsxDEV(TableContainer, {\n      sx: {\n        maxHeight: 440\n      },\n      children: /*#__PURE__*/_jsxDEV(Table, {\n        stickyHeader: true,\n        \"aria-label\": \"sticky table\",\n        children: [/*#__PURE__*/_jsxDEV(TableRow, {\n          children: columns.map(column => /*#__PURE__*/_jsxDEV(TableCell, {\n            align: column.align,\n            style: {\n              top: 57,\n              minWidth: column.minWidth\n            },\n            children: column.label\n          }, column.id, false, {\n            fileName: _jsxFileName,\n            lineNumber: 80,\n            columnNumber: 15\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 78,\n          columnNumber: 11\n        }, this), rows ? /*#__PURE__*/_jsxDEV(TableBody, {\n          children: rows.slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage).map(row => {\n            return /*#__PURE__*/_jsxDEV(TableRow, {\n              hover: true,\n              role: \"checkbox\",\n              tabIndex: -1,\n              children: columns.map(column => {\n                const value = row[column.id];\n                return /*#__PURE__*/_jsxDEV(TableCell, {\n                  align: column.align,\n                  children: column.format && typeof value === \"number\" ? column.format(value) : value\n                }, column.id, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 104,\n                  columnNumber: 27\n                }, this);\n              })\n            }, row.code, false, {\n              fileName: _jsxFileName,\n              lineNumber: 95,\n              columnNumber: 21\n            }, this);\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 90,\n          columnNumber: 13\n        }, this) : null]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(TablePagination, {\n      rowsPerPageOptions: [10, 25, 100],\n      component: \"div\",\n      count: rows.length,\n      rowsPerPage: rowsPerPage,\n      page: page,\n      onPageChange: handleChangePage,\n      onRowsPerPageChange: handleChangeRowsPerPage\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 118,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 75,\n    columnNumber: 5\n  }, this);\n}\n_s(DynamicTable, \"Uz4k2eUeuORM3DfTDmp6lw3GYYo=\");\n_c = DynamicTable;\nvar _c;\n$RefreshReg$(_c, \"DynamicTable\");","map":{"version":3,"names":["React","Paper","Table","TableBody","TableCell","TableContainer","TableHead","TablePagination","TableRow","axios","others","jsxDEV","_jsxDEV","columns","id","label","minWidth","DynamicTable","vendorName","_s","page","setPage","useState","rowsPerPage","setRowsPerPage","rows","setRows","handleChangePage","event","newPage","handleChangeRowsPerPage","target","value","fetchProductsAmount","response","get","then","console","log","status","data","error","sx","width","children","maxHeight","stickyHeader","map","column","align","style","top","fileName","_jsxFileName","lineNumber","columnNumber","slice","row","hover","role","tabIndex","format","code","rowsPerPageOptions","component","count","length","onPageChange","onRowsPerPageChange","_c","$RefreshReg$"],"sources":["/Users/barisaytekin/case/frontend/src/Table.js"],"sourcesContent":["import * as React from \"react\";\nimport Paper from \"@mui/material/Paper\";\nimport Table from \"@mui/material/Table\";\nimport TableBody from \"@mui/material/TableBody\";\nimport TableCell from \"@mui/material/TableCell\";\nimport TableContainer from \"@mui/material/TableContainer\";\nimport TableHead from \"@mui/material/TableHead\";\nimport TablePagination from \"@mui/material/TablePagination\";\nimport TableRow from \"@mui/material/TableRow\";\nimport axios, * as others from \"axios\";\n\nconst columns = [\n  { id: \"name\", label: \"Name\", minWidth: 170 },\n  {\n    id: \"amount\",\n    label: \"Number of sales\",\n    minWidth: 170,\n  },\n];\n\n// function createData(name, code, population, size) {\n//   const density = population / size;\n//   return { name, code, population, size, density };\n// }\n\n// const rows = [\n//   createData(\"India\", \"IN\", 1324171354, 3287263),\n//   createData(\"China\", \"CN\", 1403500365, 9596961),\n//   createData(\"Italy\", \"IT\", 60483973, 301340),\n//   createData(\"United States\", \"US\", 327167434, 9833520),\n//   createData(\"Canada\", \"CA\", 37602103, 9984670),\n//   createData(\"Australia\", \"AU\", 25475400, 7692024),\n//   createData(\"Germany\", \"DE\", 83019200, 357578),\n//   createData(\"Ireland\", \"IE\", 4857000, 70273),\n//   createData(\"Mexico\", \"MX\", 126577691, 1972550),\n//   createData(\"Japan\", \"JP\", 126317000, 377973),\n//   createData(\"France\", \"FR\", 67022000, 640679),\n//   createData(\"United Kingdom\", \"GB\", 67545757, 242495),\n//   createData(\"Russia\", \"RU\", 146793744, 17098246),\n//   createData(\"Nigeria\", \"NG\", 200962417, 923768),\n//   createData(\"Brazil\", \"BR\", 210147125, 8515767),\n// ];\n\nexport default function DynamicTable({ vendorName }) {\n  const [page, setPage] = React.useState(0);\n  const [rowsPerPage, setRowsPerPage] = React.useState(10);\n  const [rows, setRows] = React.useState([]);\n\n  const handleChangePage = (event, newPage) => {\n    setPage(newPage);\n  };\n\n  const handleChangeRowsPerPage = (event) => {\n    setRowsPerPage(+event.target.value);\n    setPage(0);\n  };\n  const fetchProductsAmount = async () => {\n    const response = axios.get(`/api/productsamount/Sobe`).then(\n      (response) => {\n        console.log(response);\n        if (response.status === 200) {\n          console.log(response.data);\n        } else {\n          console.log(`Status code ${response.status}`);\n        }\n      },\n      (error) => {\n        console.log(error);\n      }\n    );\n    setRows(response.data);\n  };\n\n  return (\n    <Paper sx={{ width: \"90%\" }}>\n      <TableContainer sx={{ maxHeight: 440 }}>\n        <Table stickyHeader aria-label=\"sticky table\">\n          <TableRow>\n            {columns.map((column) => (\n              <TableCell\n                key={column.id}\n                align={column.align}\n                style={{ top: 57, minWidth: column.minWidth }}\n              >\n                {column.label}\n              </TableCell>\n            ))}\n          </TableRow>\n          {rows ? (\n            <TableBody>\n              {rows\n                .slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage)\n                .map((row) => {\n                  return (\n                    <TableRow\n                      hover\n                      role=\"checkbox\"\n                      tabIndex={-1}\n                      key={row.code}\n                    >\n                      {columns.map((column) => {\n                        const value = row[column.id];\n                        return (\n                          <TableCell key={column.id} align={column.align}>\n                            {column.format && typeof value === \"number\"\n                              ? column.format(value)\n                              : value}\n                          </TableCell>\n                        );\n                      })}\n                    </TableRow>\n                  );\n                })}\n            </TableBody>\n          ) : null}\n        </Table>\n      </TableContainer>\n      <TablePagination\n        rowsPerPageOptions={[10, 25, 100]}\n        component=\"div\"\n        count={rows.length}\n        rowsPerPage={rowsPerPage}\n        page={page}\n        onPageChange={handleChangePage}\n        onRowsPerPageChange={handleChangeRowsPerPage}\n      />\n    </Paper>\n  );\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}